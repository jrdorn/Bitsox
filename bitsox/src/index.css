/* bg images: similar to uniswap/aave */

/* || General Setup */

@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap");

body {
  /* off-black */
  background-color: #282828;
  /* background-image: linear-gradient(
    to right bottom,
    #191919,
    #1c1c1c,
    #1f1f1f,
    #222222,
    #252525,
    #282828,
    #2a2a2a,
    #2d2d2d,
    #303030,
    #323232,
    #353535,
    #383838
  ); */
  image-rendering: crisp-edges;
  min-height: 100vh;
}

html,
body {
  margin: 0;
  padding: 0;
}

/* alternative box model */

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/* || Typography */

html {
  color: #e8e6e3; /* off-white */
  font-family: "Roboto", sans-serif;
  font-size: 16px;
  line-height: 1.4;
}

h1 {
  font-weight: 500;
  font-size: 3rem;
}
/*
        Sizes (18px base)

            56px head

            32px subhead

            24px subhead
    
            20px body

            18px head

            12px footer
*/

h2 {
  font-weight: 400;
  font-size: 2rem;
}

h3 {
  font-weight: 400;
  font-size: 1.75rem;
}

h4 {
  font-weight: 400;
  font-size: 1.5rem;
}

h5 {
  font-weight: 300;
  font-size: 1.25rem;
}

p {
  font-weight: 300;
  font-size: 1rem;
}

/*


    2. Handle routing and Navbar- render different pages without refreshing the screen 

        window.history.pushState("object or string", "Title", "/new-url");

        also if user types '_/profile' while on '_/' it should navigate without refreshing the page
          or, let it refresh the page but make sure the correct Tab is highlighted


        when a Route is matched, the loaded component does unmount


        maybe new architecture: 

          Root page
            render grid, Searchbar, [Page], Filters, Navbar
              [Home, Profile, Cart, About, Blog, Support]

          Checkout page



        May have found incredibly easy solution: React Router v6 nested routes
        
        Redirect '/' to 'home'
        Change 'Home' to something related to site purpose, like just 'socks'
        Name and organize Common folder and components, add .js and .css (Root? App? Main?)
        





    3.  Hamburger submenu
          above main man
          animation

    4. move on to About mock UI and other pages (should go much faster since the Common
        components, Searchbar and Navbar, will be done)


        














*/

/* lighter black */
/* background-color: #2e2c2a; */

/* lightest black */
/* background-color: #383735; */

/* purple */
/* background-color: #6b269d; */

/* pink */
/* background-color: #cc72e2; */

/* violet */
/* background-color: #a022b5; */

/* || Responsive Design */
