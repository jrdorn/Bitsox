{"ast":null,"code":"//mock function that mimics async data request\nexport function fetchCount() {\n  let amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return new Promise(resolve => {\n    setTimeout(() => resolve({\n      data: amount\n    }), 500);\n  });\n}","map":{"version":3,"sources":["/Users/jrdorn/Documents/Bitsox/client/src/routes/Common/routes/HelpCenter/routes/FAQs/components/FunctionComponent/FunctionComponentAPI.js"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data"],"mappings":"AAAA;AACA,OAAO,SAASA,UAAT,GAAgC;AAAA,MAAZC,MAAY,uEAAH,CAAG;AACrC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BC,IAAAA,UAAU,CAAC,MAAMD,OAAO,CAAC;AAAEE,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAd,EAAkC,GAAlC,CAAV;AACD,GAFM,CAAP;AAGD","sourcesContent":["//mock function that mimics async data request\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve({ data: amount }), 500);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}