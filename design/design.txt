|| Personas and product/market filter


|| Initial business requirements 

    Right now many people are curious about cryptocurrency and may have hold it on 
    a centralized exchange like Coinbase or even hold their own private keys, but crypto 
    is still not commonly used to purchase physical goods. 

    Bitsox is an ecommerce site that allows people to purchase socks with cryptocurrency. 

    This will allow users to spend their crypto conveniently, safely, and securely.

    Constraints include international shipping, allocating adequate time for site design and maintenance,
    providing responsive customer support, and scaling the platform.

    Quality will be controlled through unit tests which rigorously verify the integrity of the platform.

    Future expansions could include integration and collaboration with DAOs and NFT projects, 
    such as providing special offers to a DAO or a unique sock displaying one's digital art NFT
    on a sock. Users may also mint their own NFTs to represent ownership of their sock on the Solana
    blockchain. 

    Bitsox also aims to keep costs and shipping as low as possible, and to eventually offer the option 
    to ship worldwide so that unbanked and marginalized people across the globe have access to a 
    permissionless financial ecosystem. 



            Problems to solve:
                user needs and expectations
                purpose behind this solution
                high-level contraints that could negate success
                describe what deliverables are needed (not how to accomplish them)

                vision, objectives, and context 
                success factors 
                project scope
                stakeholder identification 
                solution scope
                constraints (schedule, budget)
                quality control measures


            Outcome to deliver value: 
                potential and freedom of DeFi ecosystem
                convenience, safety
                anyone can buy from anywhere, unbanked and marginalized people





|| Site logo, PSD/ keynote mockups/ wireframes for each page of site

    Dimensions and resolution
        Window
        Favicon.ico 32x32
            src http://freevector.co/author/jerron
            gimp 
            Uniswap logo and color 
        Logo.png 

        Header 1600 x (64 | 128 | 192)
            npmjs.com ticolor animation
            violet a022b5, orange e53a19, yellow fc5f08, turquoise 1caba5

    Color scheme
        Off-black 282828 (apple system)
        lighter 2e2c2a
        lightest 383735

        purple 6b269d (uniswap)
        pink cc72e2
        violet a022b5

    Font 
        Uniswap inspo 
        Sizes 

            56px head
            24px subhead

            18px head

            32px subhead
            20px body

            12px footer

            1.4 line height? 





||| Components 

    (single-responsibility principle)
    # outline pages
    # outline shared components and page-specific components 
    for each page:
        style individual components 
        then setup grid layout 
        complete responsive UI
        routing 
        then add scripts
    setup server 
    setup mongodb
    add state 
        local 
        global 
    test and verify



    >Cross-page components

        Navbar (sidenav/ collapse/ hamburger)
            searchbar 
            page links 
            product categories?

        Footer 
            Mobile: home, cart, profile, nav hamburger 
            Tablet and desktop: support, copyright



    HOME PAGE

        inventory list
            individual item


    ABOUT PAGE

        header and paragraph 

        external links
            purchasing crypto 
            general ecosystem info 


    SUPPORT 
          

        contact form 




    PROFILE 

        login/ register (email only, not Google | Facebook re: privacy concerns)

        logout 

        view history

        update info 
            public keys
            address 
            email 
            password 
        
        email notifications


        hooks:
            submit form => 
            auth request =>
            analytics tracker => 
            dispatch events =>
            redirect user to new page 


    BLOG 

        individual posts


    CART 

        add/ remove items 


    CHECKOUT 

        form fields and buttons 

        (remove item from inventory DB after puchase)





|| State

    Data 

        Global 
            user auth
            session state

        Local
            forms



        user auth JWT
            wishlist
            cart state 
            email notif's
            public keys/ connect wallet 

        JSON API inventory
            size
            weight 
            category 
            name
            price
            sold 
    
        session state- logged in/out, temp session  

        Bitsox public keys 

        analytics 

        handle payment 
        




    think of all the state needed to describe how app works
        describe UI with as few state values as possible
        app state (global, core data) and UI state (local, what the app is currently doing)
            local => if dropdown is open, current value of form input...

        design actions

        write root reducer combineReducers
            split reducer into slice reducers based on section of Redux state they update

        ajax calls to server/ async functions inside Redux thunks (dispatch and getState as args)
            loading state value to indicate current request status
            "request started" action before API call
            update loading state value when request completes

        react-router-dom





|| CSS
    
    accessible
    
    responsive 
        Mobile  <  768px (first)
        Tablet  >= 768px
        Desktop >= 1200px

