90/15 Pomodoro 



|| 1/19

    Yesterday

        Unexpected challenges?
            material design icons not rendering properly
            svg, png, CDN, self-hosting
            goal is smooth color transitions on hover

        Progress    
            Searchbar UI
            Filters UI 
            Deal UI
            Home grid layout

    What problems to solve 
        render material design icons
        Navbar 
        Item UI
        UI mock for About

    How to solve them
        CSS grid

    Prioritize
        Material design icons
        UI Components

    Potential roadblocks
        Material design implementation challenges (css/ js smooth animation)

    How to handle them
        Try each method (svg/png/cdn/self), if not a good fit then fall back to 
            text links or explore alternative icons



|| 1/20

    Yesterday

        Progress
            Searchbar: center, custom border on focus
            Navbar: sync route with buttons, Material UI icons, color scheme
            Lock Searchbar to top and Navbar to bottom of viewport

        Unexpected challenges?
            positioning logo and magnifying glass icon for responsive Searchbar 
            using tabs for Navbar: I want to use the indicator animation
                when switching tabs, but going to new route refreshes the page 

    What problems to solve 
        1. render different pages without refreshing the screen 
        2. finish UI mock components and complete responsive layout for Home, verify on multiple browsers 
        3. move on to About mock UI and other pages (should go much faster since the Common
            components, Searchbar and Navbar, will be done)

    How to solve them
        1. possibly abandon React-Router, except for pages that don't use Searchbar + Navbar 
            onClick [ Navbar element, inventory item ], change URL and change component display 
        2. production color scheme, and dummy box components that mimick production specs (e.g. boxes for inventory
            items that could be stored in MongoDB)
            verify against websites with quality design (Stackoverflow, Uniswap, Amazon)
        3. follow same patterns as Home mockup

    Potential roadblocks
        1. unforseen consequences of avoiding Router- keeping state together for multiple pages
        2. settling on an aesthetically pleasing layout for Searchbar, and implementing 
            logo and magnifying glass on top of fixed area  

    How to handle them
        1. update mental model - app as not just components that belong to pages, but sea of components 
            swimming together that are tied to each other by actions. So for the "pages" that will
            render by clicking Navbar tabs, the user will experience it as multiple pages, but they 
            could also be thought of as rendering a single page and swapping out some components for others 
        2. review inspiration sites, use devtools to see how they implemented their searchbars and top navbars 



|| 1/21

    Yesterday

        Progress    
            Responsive Searchbar, logo, Filters 
            Filters onClick animation 
            Mock UI's for Inventory and Deal components 
            Move Filter component to Common folder to share with all pages 
            Replace Home icon in Navbar with Socks, and outline new subroutes

        Unexpected challenges?
            exploring routing solutions. Wanting to click Navbar icons to go to new pages with unique URLs
                without refreshing the page. Multiple incomplete Routerv5 solutions, but Routerv6 allows nested Routes
                which greatly speeds up implementation. 
            deciding to change Home page to Socks store page and think of Searchbar-Filters-Navbar as its own "template"
                page and route at '/' that overlays every page except for Checkout

    What problems to solve 
        1. Complete renaming components and pages for new route architecture, add new nested routes 
        2. Navbar Hamburger submenu with nested routes
        3. Mock UI for all page components

    How to solve them
        1. Follow React Router v6 API docs and search Stackoverflow for clarification/ troubleshooting
        2. Find existing website that already has the submenu design and animation I want, use devtools to borrow key elements, implement animation with JavaScript
        3. Use CSS grid to layout elements based on Keynote wireframes 

    Prioritize
        Order listed above

    Potential roadblocks
        Time cost of finding the right design and animation

    How to handle them
        Mindfulness of how much time I spend choosing a design


|| 1/22

    Yesterday

        Progress
            Common page, replace Home with Socks
            Use Outlet to render nested subroutes
            Increase nested routes margin for visibility with Common layout 
            Add HelpCenter, nest page folder for nested routes

        Unexpected challenges?
            Reorganizing file structure and refactoring code to fit what I think would 
            make the most sense and provide the best UX (getting rid of hamburger 
            button and creating HelpCenter page)

    What problems to solve 
        1. HelpCenter layout and subroute nesting/ styles 
        2. Mock UI for all page components

    How to solve them
        1. Compare support pages on favorite sites and choose the most user-friendly design 
        2. Use CSS grid to layout elements based on Keynote wireframes 

    Prioritize
        Order listed above

    Potential roadblocks
        Potential problems implementing links and routes for the new site structure, and 
        managing state properly 

    How to handle them
        Given the current high-level site map, break down tasks to atomized bits and either
        implement them or go back and change plan 


|| 1/23

    Yesterday

        Progress    
            Rename & reorganize file structure
            HelpCenter Navbar logo
            Merge Support and HelpCenter pages
            Functional Navbar routes

        Unexpected challenges?
            "yarn start" not working. "command "start" not found"
                cd to right subfolder
            "webpack 5.66.0 compiled with 17 errors"
                fixing links after reorganizing and renaming files, implementing nested routes
                for HelpCenter

    What problems to solve 
        HelpCenter UI and routes
        Mock UI for About and all other pages
        Get user auth working 

    How to solve them
        Follow React Router API docs and Keynote wireframes 

    Prioritize
        Order listed, with urgency for mock UIs

    Potential roadblocks
        Perfectionism around design 

    How to handle them
        Think "minimum viable product" and about complete app functionality:
            user auth, storing inventory, secure checkout, etc. Spending too much 
            time on minor details distracts from big picture 



|| 1/24

    Yesterday

        Progress    
            Change About page to FAQs, include in HelpCenter
            Complete HelpCenter mock UI
                MUI Info buttons with show-hide animations
                Contact form, title, submit button 
            Nested routes for About and Blog

        Unexpected challenges?
            nested routes for FAQs and Blog
                *SOLUTION: do not actually nest routes in index.js, since I do not want 
                /help_center UI to persist in FAQs and Blog. Just render like normal routes
                and define their url's as "help_center/{FAQS | Blog}

            thinking "how could I implement this with pure CSS/JS" versus "what 
                MUI component could I borrow and edit to implement what I have in my mind"

            TextField component doesn't make explicit how to change border, on hightlight color,
                only how to change select color
                taking much longer than expected- parsing CSS specificity to highlight desired components
                partial solution- inspecting devtools and using knowledge of CSS children: 
                        .formField label {
                    color: red;
                }
                .formField div fieldset {
                    border-color: red;
                }
                finding smaller subcomponents, considering editing global class names included with MUI,
                would rather not just ignore it and create a custom border 

                partial solution would not select on-hover, so using global styleOverrides key from API
                sx = {{}}

                minRows, maxRows for setting height of message element, as opposed to messing with div container
                and textarea inside


    What problems to solve 
        1. Finish mock UIs (FAQs, Blog, Profile, Cart, Checkout)

        2. Get user auth working 

        3. Setup MongoDB catalog, inventory management, shopping cart, transactions / explore other popular ecommerce solutions like Shopify

    How to solve them
        Follow wireframes, read Mongo/ React/ Redux API docs and devblogs on ecommerce solutions

    Prioritize
        Ideally complete mock UIs and user auth today, then start working with Mongo

    Potential roadblocks
        Complex components/ custom styles for UI components

    How to handle them
        Emphasis on "mock"- most important thing is to get app working, you can always polish
            the UI later 



|| 1/25

    Yesterday

        Progress    

            Link to FAQs and Blog pages from HelpCenter Info component 
            Finish remaining mock UIs (FAQs, Blog, Profile, Cart, Checkout)
            New 404 page 

        Unexpected challenges?

            React: key not passing to React list component in FAQs
                "Each child in a list should have a unique "key" prop."
                solved: github issues, add id prop to QA object and pass as key on ListItem component

            CSS: setting position:relative on wishlist items, then this making the page width larger than viewport
                solve by isolating components and manually setting width


    What problems to solve and how to solve them

        * Setup NodeJS server and learn how to deploy app to Heroku (deploy now, and continously push updates? Version no.'s?)

        * Get user auth working, JWT login

        * Setup MongoDB catalog, inventory management, shopping cart, transactions / explore other popular ecommerce solutions like Shopify
            
        * Order confirmation email, track shipping

        #solve: API docs and stackoverflow for clarification 


    Potential roadblocks and how to handle them

        Unfamiliarity with new technologies: API docs, tutorials if needed, search the right questions on stackoverflow 
        


|| 1/26

    Yesterday

        Progress    

            Finish Heroku tutorials

            Create Express app and make HTTP request to server
            
            Create Heroku Postgres client

        Unexpected challenges?

            length of time to finish Heroku tutorials

            design decision: don't worry about clustering/ concurrency for now

            setup SSL support for local Node server to work with Postgres,
                or try localhost db, or other solution


    What problems to solve and how to solve them

      * Setup NodeJS server and deploy app to Heroku 

      * Setup Postgres DB

      * Get user auth working, JWT login

      * Setup catalog, inventory management, shopping cart, transactions / explore other popular ecommerce solutions like Shopify
          
      * Order confirmation email, track shipping


    Potential roadblocks how to handle them

      Heroku Postgres db not running locally: explore alternative implementations on stackoverflow



|| 1/27

    Yesterday

        Progress    

        Unexpected challenges?

    What problems to solve and how to solve them

    Potential roadblocks how to handle them
